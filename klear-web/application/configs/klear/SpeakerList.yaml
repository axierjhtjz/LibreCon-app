#include conf.d/mapperList.yaml
#include conf.d/actions.yaml
#include TagsList.yaml

fixedPositions:
  - &fixedPositionsForScheduele
    data:
      fields:
        name: true
        picture: true
    time:
      fields:
        targetDate: true
        startTime: true
        finishTime: true
    link1:
      fields:
        link1: true
        link1Type: true
    link2:
      fields:
        link2: true
        link2Type: true
    link3:
      fields:
        link3: true
        link3Type: true
    link4:
      fields:
        link4: true
        link4Type: true
    multiselect:
      fields:
        RelScheduleSpeaker: true
        RelTagScheduele: true

  - &fixedPositionsForSpeaker
    data:
      fields:
        name: true
        company: true
        picture: true
    link1:
      fields:
        link1: true
        link1Type: true
    link2:
      fields:
        link2: true
        link2Type: true
    link3:
      fields:
        link3: true
        link3Type: true
    link4:
      fields:
        link4: true
        link4Type: true
    multiselect:
      fields:
        RelScheduleSpeaker: true
        RelTagSpeaker: true

production:
  main:
    module: klearMatrix
    defaultScreen: speakerList_screen
  screens:
    speakerList_screen: &speakerList_screenLink
      controller: list
      pagination:
        items: 25
      <<: *Speaker
      title: _("List of %s %2s", ngettext('Speaker', 'Speaker(s)', 0), "[format| (%parent%)]")
      fields:
        order:
          name: true
        blacklist:
          link1: true
          link1Type: true
          link2: true
          link2Type: true
          link3: true
          link3Type: true
          link4: true
          link4Type: true
        options:
          title: _("Options")
          screens:
            speakerEdit_screen: true
          dialogs:
            speakerDel_dialog: true
          default: speakerEdit_screen
      options:
        title: _("Options")
        screens:
          speakerNew_screen: true
        dialogs:
          speakerDel_dialog: true
    speakerNew_screen: &speakerNew_screenLink
      <<: *Speaker
      controller: new
      class: ui-silk-add
      label: true
      multiInstance: true
      title: _("Add %s", ngettext('Speaker', 'Speaker(s)', 1))
      shortcutOption: N
      fields:
        blacklist:
          lastModified: true
      fixedPositions:
        <<: *fixedPositionsForSpeaker
    speakerEdit_screen: &speakerEdit_screenLink
      <<: *Speaker
      controller: edit
      class: ui-silk-pencil
      label: false
      title: _("Edit %s %2s", ngettext('Speaker', 'Speaker(s)', 1), "[format| (%item%)]")
      fields:
        blacklist:
          lastModified: true
      fixedPositions:
        <<: *fixedPositionsForSpeaker
    tagsNew_screen:
      <<: *tagsNew_screenLink

    scheduleNew_screen:
      <<: *Schedule
      controller: new
      class: ui-silk-add
      label: true
      multiInstance: true
      title: _("Add %s", ngettext('Schedule', 'Schedule(s)', 1))
      shortcutOption: N
      fields:
        blacklist:
          lastModified: true
          startDateTime: true
          finishDateTime: true
          RelScheduleSpeaker: true
      fixedPositions:
        <<: *fixedPositionsForScheduele

  dialogs:
    speakerDel_dialog: &speakerDel_dialogLink
      <<: *Speaker
      controller: delete
      class: ui-silk-bin
      labelOption: false
      title: _("Delete %s", ngettext('Speaker', 'Speaker(s)', 1))
      description: _("Do you want to delete this %s?", ngettext('Speaker', 'Speaker(s)', 1))
      message: _("%s successfully deleted.", ngettext('Speaker', 'Speaker(s)', 1))
      multiItem: 1
      labelOnList: 1

  commands:
    PictureDownload_command_speaker:
      <<: *Speaker
      controller: File
      action: force-download
      mainColumn: picture
    PictureUpload_command_speaker:
      <<: *Speaker
      controller: File
      action: upload
      mainColumn: picture
    PicturePreview_command_speaker:
      <<: *Speaker
      controller: File
      action: preview
      mainColumn: picture
      
    autocomplete_command:
      <<: *Tags
      controller: field-decorator
      action: index
      autocomplete:
        mapperName: \Librecon\Mapper\Sql\Tags
        label: name
        fieldName:
          fields:
            - name
          template: '%name%'
        limit: 8
        order: name_${lang}

    autocomplete_command_schedule:
      <<: *Schedule
      controller: field-decorator
      action: index
      autocomplete:
        mapperName: \Librecon\Mapper\Sql\Schedule
        label: name
        fieldName:
          fields:
            - name
          template: '%name%'
        limit: 8
        order: name_${lang}
testing:
  _extends: production
staging:
  _extends: production
development:
  _extends: production
